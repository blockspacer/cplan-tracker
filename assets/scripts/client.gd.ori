extends Node

var packet = null;
var peer = null;
var connected = false;

const MAX_RETRY = 10;

var server_address = null;
var connecting = false;
var connect_attempts = 0;
var connect_delay = 0.0;

signal client_connected();
signal client_disconnected();
signal event_received(event);

func _ready():
	set_process(true);

func connect(host = "localhost", port = 3000):
	if connected || connecting:
		return;
	
	server_address = GDNetAddress.new();
	server_address.set_host(host);
	server_address.set_port(port);

	packet = GDNetHost.new();
	packet.bind();
	
	peer = packet.connect(server_address);
	
	connect_delay = 0.0;
	connect_attempts = 0;
	connecting = true;

func _process(delta):
	if connecting && !connected:
		if connect_attempts >= MAX_RETRY:
			connecting = false;
			return;
		
		if connect_delay < 0.1:
			connect_delay += delta;
			return;
		connect_delay = 0.0;
		
		if packet.is_event_available():
			var event = packet.get_event();
			if event.get_event_type() == GDNetEvent.CONNECT:
				client_connected();
				connected = true;
				connecting = false;
		else:
			peer = packet.connect(server_address);
		connect_attempts += 1;
		
		return;
	
	if !connected:
		return;
	
	if packet.is_event_available():
		var event = packet.get_event();
		emit_signal("event_received", event);

func client_connected():
	emit_signal("client_connected");